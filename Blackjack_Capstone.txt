import random
from art import logo


def play_game():
    print(logo)
    def deal_card():
        # returns a card from deck
        cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
        card = random.choice(cards)
        return card

    def calculate_score(cards):
        # this checks for blackjack with a 10 and 11 of two cards only
        # takes a list of cards and calculate score of cards
        if sum(cards) == 21 and len(cards) == 2:
            return 0
        # This checks if user has an ace, if so and goes over 21, we change it
        # to a 1 since an ace can be a 1 or 11
        if 11 in cards and sum(cards) > 21:
            cards.remove(11)
            cards.append(1)
        return sum(cards)

    def compare(u_score, c_score):
        if u_score == c_score:
            return 'Draw'
        elif c_score == 0:
            return 'Lose, opponent has blackjack'
        elif u_score == 0:
            return 'Winner, you have blackjack'
        elif u_score > 21:
            return 'you went over, you lose'
        elif c_score > 21:
            return 'Opponent went over, you win'
        elif u_score > c_score:
            return 'You win'
        else:
            return 'You lose'

    user_cards = []
    computer_cards = []
    # put it as a negative number because we just want a dummy value until we update
    # it later
    user_score = -1
    computer_score = -1
    is_game_over = False

    # did an underscore here because we wanted to just run this twice
    # with no condition to draw the cards
    for _ in range(2):
        user_cards.append(deal_card())
        computer_cards.append(deal_card())

    while not is_game_over:
        user_score = calculate_score(user_cards)
        computer_score = calculate_score(computer_cards)
        print(f'Your cards: {user_cards}, score is {user_score}')
        print(f'Computer first cards: {computer_cards[0]}')

        if user_score == 0 or computer_score == 0 or user_score > 21:
            is_game_over = True

        else:
            user_should_deal = input("Type 'y' to get another card, type 'n' to pass: ")
            if user_should_deal == 'y':
                user_cards.append(deal_card())
            else:
                is_game_over = True

    while computer_score != 0 and computer_score < 17:
        computer_cards.append(deal_card())
        computer_score = calculate_score(computer_cards)

    print(f" Your final hand: {user_cards}, final score: {user_score}")
    print(f" computer final hand: {computer_cards}, final score: {computer_score}")
    print(compare(user_score, computer_score))

while input("Do you wanna play a game of Blackjack? Type'y' or 'n': ") == 'y':
    print('\n' * 20)
    play_game()






# One Way for solution, intial attempt
# def blackjack_game():
#     start_game = input("Do you want to play a game of Blackjack? Tpe 'y' or 'n': ").casefold()
#     if start_game == 'y':
#         # clears game and starts fresh
#         print('\n' * 20)
#         print(logo)
#         # Deck of cards we are pulling from
#         cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
#         dealer_cards = []
#         keep_drawing = False
#         dealer_drawing = True
#
#        # will assign the user two cards from deck of cards
#         # using random.choices(card, k =2) will return a list for the user already. if you
#         # try to append this to a empty list, you will nest the array and it will error out
#         user_cards = random.choices(cards, k = 2)
#         user_total = sum(user_cards)
#         dealer_cards.append(random.choice(cards))
#         dealer_total = sum(dealer_cards)
#
#         print(f'Your cards: {user_cards}, current score: {user_total}')
#         print(f'Dealer first card: {dealer_cards}')
#
#         draw_cards = input("Type 'y' to get another card, type 'n' to pass: ").casefold()
#         if draw_cards == 'y':
#             keep_drawing = True
#             # this condition will break when user says no or draws over 21
#             while keep_drawing:
#                 user_cards.append(random.choice(cards))
#                 user_total = sum(user_cards)
#                 print(f'Your cards: {user_cards}, current score: {user_total}')
#                 print(f'Dealer first card: {dealer_cards}')
#
#                 # We re-ask the player if they want to continue to draw cards or not to break while loop
#                 # can also break if player is over 21 cards
#                 if draw_cards == 'n' or user_total > 21:
#                     keep_drawing = False
#
#                 draw_cards = input("Type 'y' to get another card, type 'n' to pass: ").casefold()
#
#         # Once we break out of loop above then we continue with the game from here
#         # now we cycle until the computer is either over 16, equal to the user, reach 21 or over 21
#         while dealer_drawing:
#
#             dealer_cards.append(random.choice(cards))
#             dealer_total = sum(dealer_cards)
#             if dealer_total >= 21:
#                 dealer_drawing = False
#             elif dealer_total >= 16:
#                 dealer_drawing = False
#
#         # Now that we have user results and dealers, lets compare the answers
#         print(f'Your final hand: {user_cards}, final score: {sum(user_cards)}')
#         print(f'Dealer final hand: {dealer_cards}, final score: {sum(dealer_cards)}')
#         blackjack_results(user_total, dealer_total)
#         blackjack_game()
#
#     else:
#         blackjack_game()
#
#
#
# def blackjack_results(user_score, dealer_score):
#
#     if dealer_score == 21:
#         result = print('You Lose!')
#
#     elif (user_score > dealer_score and not user_score > 21) or (not user_score > 21 and dealer_score > 21):
#        result = print('You Win!')
#
#     elif (dealer_score > user_score and not dealer_score > 21) or (not dealer_score > 21 and user_score > 21):
#        result =  print('You Lose!')
#
#     elif user_score == dealer_score:
#         result = print('Its a draw!')
#
#
#     return result
#
# blackjack_game()